{"ast":null,"code":"import _classCallCheck from \"/Users/musubimanagement/Downloads/Python_IDE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/musubimanagement/Downloads/Python_IDE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/musubimanagement/Downloads/Python_IDE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/musubimanagement/Downloads/Python_IDE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/musubimanagement/Downloads/Python_IDE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/musubimanagement/Downloads/Python_IDE/src/App.js\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport \"./Styles/App.css\";\nimport CodeEditor from \"./Components/CodeEditor\";\nimport \"brace/mode/python\";\nimport \"brace/theme/monokai\";\nimport Header from \"./Components/Header\";\nvar logs = [];\n/* eslint-disable */\n\nconsole.oldLog = console.log;\n\nconsole.log = function (value) {\n  if (value !== \"using indexedDB for stdlib modules cache\") {\n    console.oldLog(value);\n    logs.push(\"\".concat(value));\n  }\n};\n/* eslint-disable */\n\n\nvar Scripts = function Scripts(props) {\n  var code = props.code;\n  return React.createElement(\"script\", {\n    type: \"text/python\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, code);\n};\n\nvar output = function output(arr) {\n  var out = \"\";\n\n  for (var i = 0; i < arr.length; i += 1) {\n    if (i !== arr.length - 1) {\n      out = out.concat(\"\".concat(arr[i], \"\\n\"));\n    } else {\n      out = out.concat(arr[i]);\n    }\n  }\n\n  return out;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"\",\n      outputArr: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"run\",\n    value: function run(callback) {\n      try {\n        window.brython([1]);\n      } catch (error) {\n        console.oldLog(error);\n      } //added setTimeout because console where being updated after 100 ms\n\n\n      setTimeout(function () {\n        this.setState({\n          outputArr: logs\n        }), console.oldLog(\"logsgasga\", logs);\n      }.bind(this), 100);\n    }\n  }, {\n    key: \"clearLogs\",\n    value: function clearLogs() {\n      logs = [];\n      this.setState({\n        outputArr: logs\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          code = _this$state.code,\n          outputArr = _this$state.outputArr;\n      return React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"python-editor-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"script\", {\n        type: \"text/javascript\",\n        src: \"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython.min.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"script\", {\n        type: \"text/javascript\",\n        src: \"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython_stdlib.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Scripts, {\n        code: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"python-editor-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"run-input-btn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.run();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Run\"), React.createElement(CodeEditor, {\n        id: \"python-code-editor\",\n        value: code,\n        mode: \"python\" // theme=\"monokai\"\n        ,\n        onChange: function onChange(text) {\n          return _this2.setState({\n            code: text\n          });\n        },\n        width: \"\".concat(window.innerWidth * 1, \"px\"),\n        height: \"\".concat(window.innerHeight / 1.6, \"px\"),\n        fontSize: \"1rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"run-input-btn\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.run();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Run\")), React.createElement(\"div\", {\n        id: \"python-editor-output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.clearLogs();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Clear Output\"), React.createElement(\"textarea\", {\n        id: \"python-output\",\n        readOnly: true,\n        value: output(outputArr),\n        placeholder: \"> output goes here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nScripts.propTypes = {\n  code: PropTypes.string.isRequired\n};\nexport default App;","map":{"version":3,"sources":["/Users/musubimanagement/Downloads/Python_IDE/src/App.js"],"names":["React","Helmet","PropTypes","CodeEditor","Header","logs","console","oldLog","log","value","push","Scripts","props","code","output","arr","out","i","length","concat","App","state","outputArr","callback","window","brython","error","setTimeout","setState","bind","run","text","innerWidth","innerHeight","clearLogs","Component","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport \"./Styles/App.css\";\n\nimport CodeEditor from \"./Components/CodeEditor\";\n\nimport \"brace/mode/python\";\nimport \"brace/theme/monokai\";\nimport Header from \"./Components/Header\";\n\nlet logs = [];\n\n/* eslint-disable */\nconsole.oldLog = console.log;\n\nconsole.log = function (value) {\n  if (value !== \"using indexedDB for stdlib modules cache\") {\n    console.oldLog(value);\n    logs.push(`${value}`);\n  }\n};\n/* eslint-disable */\n\nconst Scripts = props => {\n  const { code } = props;\n  return <script type=\"text/python\">{code}</script>;\n}\n\nconst output = arr => {\n  let out = \"\";\n  for (let i = 0; i < arr.length; i += 1) {\n    if (i !== arr.length - 1) {\n      out = out.concat(`${arr[i]}\\n`);\n    } else {\n      out = out.concat(arr[i]);\n    }\n  }\n  return out;\n};\n\nclass App extends React.Component {\n  state = {\n    code: \"\",\n    outputArr: [],\n  };\n\n  run(callback) {\n    try {\n      window.brython([1]);\n    } catch (error) {\n      console.oldLog(error);\n    }\n\n    //added setTimeout because console where being updated after 100 ms\n    setTimeout(\n      function () {\n        this.setState({\n          outputArr: logs\n        }),\n          console.oldLog(\"logsgasga\", logs)\n      }\n        .bind(this),\n      100\n    )\n  }\n\n  clearLogs() {\n    logs = [];\n    this.setState({\n      outputArr: logs\n    });\n  }\n\n  render() {\n    const { code, outputArr } = this.state;\n    return (\n      <>\n      <Header/>\n      <div id=\"python-editor-container\">\n        \n        <Helmet>\n          <script\n            type=\"text/javascript\"\n            src=\"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython.min.js\"\n          />\n          <script\n            type=\"text/javascript\"\n            src=\"https://cdnjs.cloudflare.com/ajax/libs/brython/3.7.1/brython_stdlib.js\"\n          />\n        </Helmet>\n        <Scripts code={code} />\n        <div id=\"python-editor-input\">\n          <button id=\"run-input-btn\" type=\"button\" onClick={() => this.run()}>\n            Run\n          </button>\n          {/* <button type=\"button\" onClick={() => this.clearInput()}>\n            Clear\n          </button> */}\n          <CodeEditor\n            id=\"python-code-editor\"\n            value={code}\n            mode=\"python\"\n            // theme=\"monokai\"\n            onChange={text => this.setState({ code: text })}\n            width={`${(window.innerWidth*1)}px`}\n            height={`${window.innerHeight/1.6}px`}\n            fontSize={\"1rem\"}\n          />\n          <button id=\"run-input-btn\" type=\"button\" onClick={() => this.run()}>\n            Run\n          </button>\n        </div>\n        <div id=\"python-editor-output\">\n          <button type=\"button\" onClick={() => this.clearLogs()}>\n            Clear Output\n          </button>\n          <textarea\n            id=\"python-output\"\n            readOnly\n            value={output(outputArr)}\n            placeholder=\"> output goes here...\"\n          />\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nScripts.propTypes = {\n  code: PropTypes.string.isRequired\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}